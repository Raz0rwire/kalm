
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: applications.core.kapp.dev
spec:
  group: core.kapp.dev
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Application is the Schema for the applications API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ApplicationSpec defines the desired state of Application
          properties:
            components:
              items:
                properties:
                  afterStart:
                    items:
                      type: string
                    type: array
                  args:
                    items:
                      type: string
                    type: array
                  beforeDestroy:
                    items:
                      type: string
                    type: array
                  beforeStart:
                    items:
                      type: string
                    type: array
                  command:
                    items:
                      type: string
                    type: array
                  cpu:
                    type: string
                  disks:
                    items:
                      properties:
                        path:
                          type: string
                        size:
                          type: string
                        type:
                          type: string
                      required:
                      - path
                      - size
                      type: object
                    type: array
                  env:
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        prefix:
                          type: string
                        suffix:
                          type: string
                        type:
                          enum:
                          - static
                          - external
                          - linked
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    type: string
                  livenessProbe:
                    description: Probe describes a health check to be performed against
                      a container to determine whether it is alive or ready to receive
                      traffic.
                    properties:
                      exec:
                        description: One and only one of the following should be specified.
                          Exec specifies the action to take.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Name or number of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: 'TCPSocket specifies an action involving a TCP
                          port. TCP hooks not yet supported TODO: implement a realistic
                          TCP lifecycle hook'
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Number or name of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  memory:
                    type: string
                  name:
                    type: string
                  plugins:
                    items:
                      type: object
                    type: array
                  ports:
                    items:
                      properties:
                        containerPort:
                          format: int32
                          type: integer
                        name:
                          type: string
                        protocol:
                          description: Protocol defines network protocols supported
                            for things like container ports.
                          enum:
                          - TCP
                          - UDP
                          - SCTP
                          type: string
                        servicePort:
                          description: '? what is service port for?'
                          format: int32
                          type: integer
                      required:
                      - containerPort
                      - name
                      type: object
                    type: array
                  readinessProbe:
                    description: Probe describes a health check to be performed against
                      a container to determine whether it is alive or ready to receive
                      traffic.
                    properties:
                      exec:
                        description: One and only one of the following should be specified.
                          Exec specifies the action to take.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Name or number of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: 'TCPSocket specifies an action involving a TCP
                          port. TCP hooks not yet supported TODO: implement a realistic
                          TCP lifecycle hook'
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Number or name of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  schedule:
                    type: string
                  workloadType:
                    enum:
                    - server
                    - cronjob
                    type: string
                required:
                - image
                - name
                type: object
              type: array
            imagePullSecretName:
              type: string
            sharedEnv:
              description: Volumes             []v1.Volume     `json:"volumes,omitempty"`
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  prefix:
                    type: string
                  suffix:
                    type: string
                  type:
                    enum:
                    - static
                    - external
                    - linked
                    type: string
                  value:
                    type: string
                required:
                - name
                type: object
              type: array
          required:
          - components
          type: object
        status:
          description: ApplicationStatus defines the observed state of Application
          properties:
            componentStatus:
              description: Failed to use map here, so use array for now.
              items:
                properties:
                  deploymentStatus:
                    description: DeploymentStatus is the most recently observed status
                      of the Deployment.
                    properties:
                      availableReplicas:
                        description: Total number of available pods (ready for at
                          least minReadySeconds) targeted by this deployment.
                        format: int32
                        type: integer
                      collisionCount:
                        description: Count of hash collisions for the Deployment.
                          The Deployment controller uses this field as a collision
                          avoidance mechanism when it needs to create the name for
                          the newest ReplicaSet.
                        format: int32
                        type: integer
                      conditions:
                        description: Represents the latest available observations
                          of a deployment's current state.
                        items:
                          description: DeploymentCondition describes the state of
                            a deployment at a certain point.
                          properties:
                            lastTransitionTime:
                              description: Last time the condition transitioned from
                                one status to another.
                              format: date-time
                              type: string
                            lastUpdateTime:
                              description: The last time this condition was updated.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of deployment condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      observedGeneration:
                        description: The generation observed by the deployment controller.
                        format: int64
                        type: integer
                      readyReplicas:
                        description: Total number of ready pods targeted by this deployment.
                        format: int32
                        type: integer
                      replicas:
                        description: Total number of non-terminated pods targeted
                          by this deployment (their labels match the selector).
                        format: int32
                        type: integer
                      unavailableReplicas:
                        description: Total number of unavailable pods targeted by
                          this deployment. This is the total number of pods that are
                          still required for the deployment to have 100% available
                          capacity. They may either be pods that are running but not
                          yet available or pods that still have not been created.
                        format: int32
                        type: integer
                      updatedReplicas:
                        description: Total number of non-terminated pods targeted
                          by this deployment that have the desired template spec.
                        format: int32
                        type: integer
                    type: object
                  name:
                    type: string
                  serviceStatus:
                    description: ServiceStatus represents the current status of a
                      service.
                    properties:
                      loadBalancer:
                        description: LoadBalancer contains the current status of the
                          load-balancer, if one is present.
                        properties:
                          ingress:
                            description: Ingress is a list containing ingress points
                              for the load-balancer. Traffic intended for the service
                              should be sent to these ingress points.
                            items:
                              description: 'LoadBalancerIngress represents the status
                                of a load-balancer ingress point: traffic intended
                                for the service should be sent to an ingress point.'
                              properties:
                                hostname:
                                  description: Hostname is set for load-balancer ingress
                                    points that are DNS based (typically AWS load-balancers)
                                  type: string
                                ip:
                                  description: IP is set for load-balancer ingress
                                    points that are IP based (typically GCE or OpenStack
                                    load-balancers)
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
            isActive:
              type: boolean
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
