
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: accesstokens.core.kalm.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.scope
    name: Scope
    type: string
  - JSONPath: .spec.resources
    name: Resources
    type: string
  group: core.kalm.dev
  names:
    kind: AccessToken
    listKind: AccessTokenList
    plural: accesstokens
    singular: accesstoken
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AccessToken is the Schema for the deploykeys API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A model to describe general access token permissions It's designed
            to be easy to translate to casbin policies. This model should NOT be generate
            manually through kubernetes api directly. Instead, use kalm apis to manage
            records.
          properties:
            creator:
              description: Creator of this key
              minLength: 1
              type: string
            expiredAt:
              description: Expire time of this key. Infinity if blank
              format: date-time
              type: string
            rules:
              description: Rules of this key
              items:
                properties:
                  kind:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                  namespace:
                    minLength: 1
                    type: string
                  verb:
                    enum:
                    - view
                    - edit
                    - manage
                    type: string
                required:
                - kind
                - name
                - namespace
                - verb
                type: object
              minItems: 1
              type: array
            subject:
              description: The subject of this key
              minLength: 1
              type: string
            token:
              description: The token, the access token name should be sha256 of this
                token.
              minLength: 64
              type: string
          required:
          - creator
          - rules
          - subject
          - token
          type: object
        status:
          description: AccessTokenStatus defines the observed state of AccessTokeny
          properties:
            lastUsedAt:
              type: integer
            usedCount:
              type: integer
          required:
          - lastUsedAt
          - usedCount
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
