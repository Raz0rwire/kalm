##################################################################################################
# This file defines the services, service accounts, and deployments for the Bookinfo sample.
#
# To apply all 4 Bookinfo services, their corresponding service accounts, and deployments:
#
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml
#
##################################################################################################

apiVersion: v1
kind: Namespace
metadata:
  name: kalm-bookinfo
  labels:
    istio-injection: enabled
    kalm-enabled: "true"
---
##################################################################################################
# Details service
##################################################################################################
apiVersion: core.kalm.dev/v1alpha1
kind: Component
metadata:
    name: details
    namespace: kalm-bookinfo
spec:
    image: docker.io/istio/examples-bookinfo-details-v1:1.15.0
    preferNotCoLocated: true
    nodeSelectorLabels:
      kubernetes.io/os: linux
    cpu: 50m
    memory: 64Mi
    ports:
        - name: http
          containerPort: 9080
          servicePort: 9080
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: core.kalm.dev/v1alpha1
kind: Component
metadata:
    name: ratings
    namespace: kalm-bookinfo
spec:
    image: docker.io/istio/examples-bookinfo-ratings-v1:1.15.0
    preferNotCoLocated: true
    nodeSelectorLabels:
      kubernetes.io/os: linux
    cpu: 50m
    memory: 64Mi
    ports:
        - name: http
          containerPort: 9080
          servicePort: 9080
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: core.kalm.dev/v1alpha1
kind: Component
metadata:
    name: reviews
    namespace: kalm-bookinfo
spec:
    image: docker.io/istio/examples-bookinfo-reviews-v1:1.15.0
    preferNotCoLocated: true
    nodeSelectorLabels:
      kubernetes.io/os: linux
    # cpu: 50m
    # memory: 128Mi
    ports:
        - name: http
          containerPort: 9080
          servicePort: 9080
    env:
        - name: LOG_DIR
          value: "/tmp/logs"
    volumes:
        - path: /tmp
          type: emptyDir
          size: 32Mi
        - path: /opt/ibm/wlp/output
          type: emptyDir
          size: 32Mi
---
apiVersion: core.kalm.dev/v1alpha1
kind: Component
metadata:
    name: reviews-v2
    namespace: kalm-bookinfo
spec:
    image: docker.io/istio/examples-bookinfo-reviews-v2:1.15.0
    preferNotCoLocated: true
    nodeSelectorLabels:
      kubernetes.io/os: linux
    # cpu: 50m
    # memory: 64Mi
    ports:
        - name: http
          containerPort: 9080
          servicePort: 9080
    env:
        - name: LOG_DIR
          value: "/tmp/logs"
    volumes:
        - path: /tmp
          type: emptyDir
          size: 32Mi
        - path: /opt/ibm/wlp/output
          type: emptyDir
          size: 32Mi
---
apiVersion: core.kalm.dev/v1alpha1
kind: Component
metadata:
    name: reviews-v3
    namespace: kalm-bookinfo
spec:
    image: docker.io/istio/examples-bookinfo-reviews-v3:1.15.0
    preferNotCoLocated: true
    nodeSelectorLabels:
      kubernetes.io/os: linux
    # cpu: 50m
    # memory: 64Mi
    ports:
        - name: http
          containerPort: 9080
          servicePort: 9080
    env:
        - name: LOG_DIR
          value: "/tmp/logs"
    volumes:
        - path: /tmp
          type: emptyDir
          size: 32Mi
        - path: /opt/ibm/wlp/output
          type: emptyDir
          size: 32Mi
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: core.kalm.dev/v1alpha1
kind: Component
metadata:
    name: productpage
    namespace: kalm-bookinfo
spec:
    image: docker.io/istio/examples-bookinfo-productpage-v1:1.15.0
    replicas: 2
    preferNotCoLocated: true
    nodeSelectorLabels:
      kubernetes.io/os: linux
    cpu: 50m
    memory: 64Mi
    ports:
        - name: http
          containerPort: 9080
          servicePort: 9080
    volumes:
        - path: /tmp
          type: emptyDir
          size: 32Mi
---
# part2 - plugin
apiVersion: core.kalm.dev/v1alpha1
kind: ComponentPlugin
metadata:
  name: termination-grace
spec:
  src: |
    function AfterPodTemplateGeneration(pod) {
      var config = getConfig();

      if (!config) {
        return;
      }

      if (config.periodSeconds) {
        pod.spec.terminationGracePeriodSeconds = config.periodSeconds;
      }

      return pod;
    }
  configSchema:
    type: object
    properties:
      periodSeconds:
        type: number
---
apiVersion: core.kalm.dev/v1alpha1
kind: ComponentPluginBinding
metadata:
  name: termination-grace
  namespace: kalm-bookinfo
spec:
  pluginName: termination-grace
  componentName: productpage
  config:
    periodSeconds: 5
---
apiVersion: core.kalm.dev/v1alpha1
kind: ComponentPlugin
metadata:
  name: http-health-probe
spec:
  src: |
    function addProbesForContainer(container) {
      var config = getConfig();

      if (!config) {
        return
      }

      var probe = {
        httpGet: {
          path: "/",
          port: config.port
        }
      }

      container.readinessProbe = probe;
      container.livenessProbe = probe;

      if (config.initialDelaySeconds) {
        container.readinessProbe.initialDelaySeconds = config.initialDelaySeconds;
        container.livenessProbe.initialDelaySeconds = config.initialDelaySeconds;
      }

      if (config.periodSeconds) {
        container.readinessProbe.periodSeconds = config.periodSeconds;
        container.livenessProbe.periodSeconds = config.periodSeconds;
      }
    }

    function AfterPodTemplateGeneration(pod) {
      var containers = pod.spec.containers;
      containers.forEach(addProbesForContainer)
      return pod;
    }
  configSchema:
    type: object
    properties:
      port:
        type: number
      initialDelaySeconds:
        type: number
      periodSeconds:
        type: number
---
apiVersion: core.kalm.dev/v1alpha1
kind: ComponentPluginBinding
metadata:
  name: productpage-http-health-probe
  namespace: kalm-bookinfo
spec:
  pluginName:  http-health-probe
  componentName: productpage
  config:
    port: 9080
---
apiVersion: core.kalm.dev/v1alpha1
kind: HttpRoute
metadata:
  name: bookinfo
  namespace: kalm-bookinfo
spec:
  hosts:
    - "bookinfo.demo.com"
  methods:
    - GET
    - POST
  schemes:
    - http
  paths:
    - /
  destinations:
    - host: productpage
      weight: 1
  stripPath: true
