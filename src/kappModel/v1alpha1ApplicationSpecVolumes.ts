/**
 * Kapp Models
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1alpha1ApplicationSpecAwsElasticBlockStore } from './v1alpha1ApplicationSpecAwsElasticBlockStore';
import { V1alpha1ApplicationSpecAzureDisk } from './v1alpha1ApplicationSpecAzureDisk';
import { V1alpha1ApplicationSpecAzureFile } from './v1alpha1ApplicationSpecAzureFile';
import { V1alpha1ApplicationSpecCephfs } from './v1alpha1ApplicationSpecCephfs';
import { V1alpha1ApplicationSpecCinder } from './v1alpha1ApplicationSpecCinder';
import { V1alpha1ApplicationSpecConfigMap } from './v1alpha1ApplicationSpecConfigMap';
import { V1alpha1ApplicationSpecCsi } from './v1alpha1ApplicationSpecCsi';
import { V1alpha1ApplicationSpecDownwardAPI } from './v1alpha1ApplicationSpecDownwardAPI';
import { V1alpha1ApplicationSpecEmptyDir } from './v1alpha1ApplicationSpecEmptyDir';
import { V1alpha1ApplicationSpecFc } from './v1alpha1ApplicationSpecFc';
import { V1alpha1ApplicationSpecFlexVolume } from './v1alpha1ApplicationSpecFlexVolume';
import { V1alpha1ApplicationSpecFlocker } from './v1alpha1ApplicationSpecFlocker';
import { V1alpha1ApplicationSpecGcePersistentDisk } from './v1alpha1ApplicationSpecGcePersistentDisk';
import { V1alpha1ApplicationSpecGitRepo } from './v1alpha1ApplicationSpecGitRepo';
import { V1alpha1ApplicationSpecGlusterfs } from './v1alpha1ApplicationSpecGlusterfs';
import { V1alpha1ApplicationSpecHostPath } from './v1alpha1ApplicationSpecHostPath';
import { V1alpha1ApplicationSpecIscsi } from './v1alpha1ApplicationSpecIscsi';
import { V1alpha1ApplicationSpecNfs } from './v1alpha1ApplicationSpecNfs';
import { V1alpha1ApplicationSpecPersistentVolumeClaim } from './v1alpha1ApplicationSpecPersistentVolumeClaim';
import { V1alpha1ApplicationSpecPhotonPersistentDisk } from './v1alpha1ApplicationSpecPhotonPersistentDisk';
import { V1alpha1ApplicationSpecPortworxVolume } from './v1alpha1ApplicationSpecPortworxVolume';
import { V1alpha1ApplicationSpecProjected } from './v1alpha1ApplicationSpecProjected';
import { V1alpha1ApplicationSpecQuobyte } from './v1alpha1ApplicationSpecQuobyte';
import { V1alpha1ApplicationSpecRbd } from './v1alpha1ApplicationSpecRbd';
import { V1alpha1ApplicationSpecScaleIO } from './v1alpha1ApplicationSpecScaleIO';
import { V1alpha1ApplicationSpecSecret } from './v1alpha1ApplicationSpecSecret';
import { V1alpha1ApplicationSpecStorageos } from './v1alpha1ApplicationSpecStorageos';
import { V1alpha1ApplicationSpecVsphereVolume } from './v1alpha1ApplicationSpecVsphereVolume';

/**
* Volume represents a named volume in a pod that may be accessed by any container in the pod.
*/
export class V1alpha1ApplicationSpecVolumes {
    'awsElasticBlockStore'?: V1alpha1ApplicationSpecAwsElasticBlockStore;
    'azureDisk'?: V1alpha1ApplicationSpecAzureDisk;
    'azureFile'?: V1alpha1ApplicationSpecAzureFile;
    'cephfs'?: V1alpha1ApplicationSpecCephfs;
    'cinder'?: V1alpha1ApplicationSpecCinder;
    'configMap'?: V1alpha1ApplicationSpecConfigMap;
    'csi'?: V1alpha1ApplicationSpecCsi;
    'downwardAPI'?: V1alpha1ApplicationSpecDownwardAPI;
    'emptyDir'?: V1alpha1ApplicationSpecEmptyDir;
    'fc'?: V1alpha1ApplicationSpecFc;
    'flexVolume'?: V1alpha1ApplicationSpecFlexVolume;
    'flocker'?: V1alpha1ApplicationSpecFlocker;
    'gcePersistentDisk'?: V1alpha1ApplicationSpecGcePersistentDisk;
    'gitRepo'?: V1alpha1ApplicationSpecGitRepo;
    'glusterfs'?: V1alpha1ApplicationSpecGlusterfs;
    'hostPath'?: V1alpha1ApplicationSpecHostPath;
    'iscsi'?: V1alpha1ApplicationSpecIscsi;
    /**
    * Volume\'s name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    */
    'name': string;
    'nfs'?: V1alpha1ApplicationSpecNfs;
    'persistentVolumeClaim'?: V1alpha1ApplicationSpecPersistentVolumeClaim;
    'photonPersistentDisk'?: V1alpha1ApplicationSpecPhotonPersistentDisk;
    'portworxVolume'?: V1alpha1ApplicationSpecPortworxVolume;
    'projected'?: V1alpha1ApplicationSpecProjected;
    'quobyte'?: V1alpha1ApplicationSpecQuobyte;
    'rbd'?: V1alpha1ApplicationSpecRbd;
    'scaleIO'?: V1alpha1ApplicationSpecScaleIO;
    'secret'?: V1alpha1ApplicationSpecSecret;
    'storageos'?: V1alpha1ApplicationSpecStorageos;
    'vsphereVolume'?: V1alpha1ApplicationSpecVsphereVolume;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "awsElasticBlockStore",
            "baseName": "awsElasticBlockStore",
            "type": "V1alpha1ApplicationSpecAwsElasticBlockStore"
        },
        {
            "name": "azureDisk",
            "baseName": "azureDisk",
            "type": "V1alpha1ApplicationSpecAzureDisk"
        },
        {
            "name": "azureFile",
            "baseName": "azureFile",
            "type": "V1alpha1ApplicationSpecAzureFile"
        },
        {
            "name": "cephfs",
            "baseName": "cephfs",
            "type": "V1alpha1ApplicationSpecCephfs"
        },
        {
            "name": "cinder",
            "baseName": "cinder",
            "type": "V1alpha1ApplicationSpecCinder"
        },
        {
            "name": "configMap",
            "baseName": "configMap",
            "type": "V1alpha1ApplicationSpecConfigMap"
        },
        {
            "name": "csi",
            "baseName": "csi",
            "type": "V1alpha1ApplicationSpecCsi"
        },
        {
            "name": "downwardAPI",
            "baseName": "downwardAPI",
            "type": "V1alpha1ApplicationSpecDownwardAPI"
        },
        {
            "name": "emptyDir",
            "baseName": "emptyDir",
            "type": "V1alpha1ApplicationSpecEmptyDir"
        },
        {
            "name": "fc",
            "baseName": "fc",
            "type": "V1alpha1ApplicationSpecFc"
        },
        {
            "name": "flexVolume",
            "baseName": "flexVolume",
            "type": "V1alpha1ApplicationSpecFlexVolume"
        },
        {
            "name": "flocker",
            "baseName": "flocker",
            "type": "V1alpha1ApplicationSpecFlocker"
        },
        {
            "name": "gcePersistentDisk",
            "baseName": "gcePersistentDisk",
            "type": "V1alpha1ApplicationSpecGcePersistentDisk"
        },
        {
            "name": "gitRepo",
            "baseName": "gitRepo",
            "type": "V1alpha1ApplicationSpecGitRepo"
        },
        {
            "name": "glusterfs",
            "baseName": "glusterfs",
            "type": "V1alpha1ApplicationSpecGlusterfs"
        },
        {
            "name": "hostPath",
            "baseName": "hostPath",
            "type": "V1alpha1ApplicationSpecHostPath"
        },
        {
            "name": "iscsi",
            "baseName": "iscsi",
            "type": "V1alpha1ApplicationSpecIscsi"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "nfs",
            "baseName": "nfs",
            "type": "V1alpha1ApplicationSpecNfs"
        },
        {
            "name": "persistentVolumeClaim",
            "baseName": "persistentVolumeClaim",
            "type": "V1alpha1ApplicationSpecPersistentVolumeClaim"
        },
        {
            "name": "photonPersistentDisk",
            "baseName": "photonPersistentDisk",
            "type": "V1alpha1ApplicationSpecPhotonPersistentDisk"
        },
        {
            "name": "portworxVolume",
            "baseName": "portworxVolume",
            "type": "V1alpha1ApplicationSpecPortworxVolume"
        },
        {
            "name": "projected",
            "baseName": "projected",
            "type": "V1alpha1ApplicationSpecProjected"
        },
        {
            "name": "quobyte",
            "baseName": "quobyte",
            "type": "V1alpha1ApplicationSpecQuobyte"
        },
        {
            "name": "rbd",
            "baseName": "rbd",
            "type": "V1alpha1ApplicationSpecRbd"
        },
        {
            "name": "scaleIO",
            "baseName": "scaleIO",
            "type": "V1alpha1ApplicationSpecScaleIO"
        },
        {
            "name": "secret",
            "baseName": "secret",
            "type": "V1alpha1ApplicationSpecSecret"
        },
        {
            "name": "storageos",
            "baseName": "storageos",
            "type": "V1alpha1ApplicationSpecStorageos"
        },
        {
            "name": "vsphereVolume",
            "baseName": "vsphereVolume",
            "type": "V1alpha1ApplicationSpecVsphereVolume"
        }    ];

    static getAttributeTypeMap() {
        return V1alpha1ApplicationSpecVolumes.attributeTypeMap;
    }
}

